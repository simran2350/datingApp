{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/lists.resolver.ts","webpack:///./src/app/_resolvers/member-detail.resolver.ts","webpack:///./src/app/_resolvers/member-edit.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver.ts","webpack:///./src/app/_resolvers/messages.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/members/member-messages/member-messages.component.css","webpack:///./src/app/members/member-messages/member-messages.component.html","webpack:///./src/app/members/member-messages/member-messages.component.ts","webpack:///./src/app/members/photo-editor/photo-editor.component.css","webpack:///./src/app/members/photo-editor/photo-editor.component.html","webpack:///./src/app/members/photo-editor/photo-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router,\n    private alertify: AlertifyService) {}\n\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.alertify.error('You shall not pass!!!');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\n\n@Injectable()\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\n    canDeactivate(component: MemberEditComponent) {\n        if (component.editForm.dirty) {\n            return confirm('Are you sure you want to continue?  Any unsaved changes will be lost');\n        }\n        return true;\n    }\n}\n","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}\n","import {Injectable} from '@angular/core';\nimport {User} from '../_models/user';\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ListsResolver implements Resolve<User[]> {\n    pageNumber = 1;\n    pageSize = 5;\n    likesParam = 'Likers';\n\n    constructor(private userService: UserService, private router: Router,\n        private alertify: AlertifyService) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\n        return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\n            catchError(error => {\n                this.alertify.error('Problem retrieving data');\n                this.router.navigate(['/home']);\n                return of(null);\n            })\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {User} from '../_models/user';\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class MemberDetailResolver implements Resolve<User> {\n    constructor(private userService: UserService, private router: Router,\n        private alertify: AlertifyService) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\n        return this.userService.getUser(route.params['id']).pipe(\n            catchError(error => {\n                this.alertify.error('Problem retrieving data');\n                this.router.navigate(['/members']);\n                return of(null);\n            })\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {User} from '../_models/user';\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from '../_services/auth.service';\n\n@Injectable()\nexport class MemberEditResolver implements Resolve<User> {\n    constructor(private userService: UserService, private router: Router,\n        private alertify: AlertifyService, private authService: AuthService) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\n        return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\n            catchError(error => {\n                this.alertify.error('Problem retrieving your data');\n                this.router.navigate(['/members']);\n                return of(null);\n            })\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {User} from '../_models/user';\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class MemberListResolver implements Resolve<User[]> {\n    pageNumber = 1;\n    pageSize = 5;\n\n    constructor(private userService: UserService, private router: Router,\n        private alertify: AlertifyService) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\n        return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\n            catchError(error => {\n                this.alertify.error('Problem retrieving data');\n                this.router.navigate(['/home']);\n                return of(null);\n            })\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Message } from '../_models/message';\nimport { AuthService } from '../_services/auth.service';\n\n@Injectable()\nexport class MessagesResolver implements Resolve<Message[]> {\n    pageNumber = 1;\n    pageSize = 5;\n    messageContainer = 'Unread';\n\n    constructor(private userService: UserService, private router: Router,\n        private alertify: AlertifyService, private authService: AuthService) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\n        return this.userService.getMessages(this.authService.decodedToken.nameid,\n              this.pageNumber, this.pageSize, this.messageContainer).pipe(\n            catchError(error => {\n                this.alertify.error('Problem retrieving messages');\n                this.router.navigate(['/home']);\n                return of(null);\n            })\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, function(e) {\n      if (e) {\n        okCallback();\n      } else {}\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {BehaviorSubject} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from '../../environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl + 'auth/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  changeMemberPhoto(photoUrl: string) {\n    this.photoUrl.next(photoUrl);\n  }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          localStorage.setItem('user', JSON.stringify(user.user));\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          this.currentUser = user.user;\n          this.changeMemberPhoto(this.currentUser.photoUrl);\n        }\n      })\n    );\n  }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl + 'register', user);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(\n            catchError(error => {\n                if (error instanceof HttpErrorResponse) {\n                    if (error.status === 401) {\n                        return throwError(error.statusText);\n                    }\n                    const applicationError = error.headers.get('Application-Error');\n                    if (applicationError) {\n                        console.error(applicationError);\n                        return throwError(applicationError);\n                    }\n                    const serverError = error.error;\n                    let modalStateErrors = '';\n                    if (serverError && typeof serverError === 'object') {\n                        for (const key in serverError) {\n                            if (serverError[key]) {\n                                modalStateErrors += serverError[key] + '\\n';\n                            }\n                        }\n                    }\n                    return throwError(modalStateErrors || serverError || 'Server Error');\n                }\n            })\n        );\n    }\n}\n\nexport const ErrorInterceptorProvider = {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true\n};\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  getUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likesParam === 'Likers') {\n      params = params.append('Likers', 'true');\n    }\n\n    if (likesParam === 'Likees') {\n      params = params.append('Likees', 'true');\n    }\n\n    return this.http.get<User[]>(this.baseUrl + 'users', { observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put(this.baseUrl + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain', {});\n  }\n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\n  }\n\n  sendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {});\n  }\n\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n\n    let params = new HttpParams();\n\n    params = params.append('MessageContainer', messageContainer);\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') !== null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n\n          return paginatedResult;\n        })\n      );\n  }\n\n  getMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId);\n  }\n\n  sendMessage(id: number, message: Message) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\n  }\n\n  deleteMessage(id: number, userId: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\n  }\n\n  markAsRead(userId: number, messageId: number) {\n    this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read', {})\n      .subscribe();\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDropdownModule, TabsModule, BsDatepickerModule, PaginationModule, ButtonsModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport {TimeAgoPipe} from 'time-ago-pipe';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { AlertifyService } from './_services/alertify.service';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { UserService } from './_services/user.service';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem('token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    ListsComponent,\n    MessagesComponent,\n    MemberCardComponent,\n    MemberDetailComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TimeAgoPipe,\n    MemberMessagesComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDropdownModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ButtonsModule.forRoot(),\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n    NgxGalleryModule,\n    FileUploadModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: ['localhost:5000'],\n        blacklistedRoutes: ['localhost:5000/api/auth']\n      }\n    })\n  ],\n  providers: [\n      AuthService,\n      ErrorInterceptorProvider,\n      AlertifyService,\n      AuthGuard,\n      UserService,\n      MemberDetailResolver,\n      MemberListResolver,\n      MemberEditResolver,\n      PreventUnsavedChanges,\n      ListsResolver,\n      MessagesResolver\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">Come on in to view your matches... All you need to do is sign up!</p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n      <button class=\\\"btn btn-info btn-lg\\\">Learn more</button>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n\n  registerToggle() {\n    this.registerMode = true;\n  }\n\n  cancelRegisterMode(registerMode: boolean) {\n    this.registerMode = registerMode;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n    <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\\\'ve Liked'}} : {{pagination.totalItems}}</h2>\\n  </div>\\n\\n<div class=\\\"container mt-3\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likers\\\" (click)=\\\"loadUsers()\\\">Members who like me</button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likees\\\" (click)=\\\"loadUsers()\\\">Members who I like</button>\\n    </div>\\n  </div>\\n\\n  <br>\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-sm-6 col-md-4 col-lg-4 col-xl-2\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n\\n\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\"\\n    >\\n\\n  </pagination>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '../../../node_modules/@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService, private userService: UserService,\n    private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n      .subscribe((res: PaginatedResult<User[]>) => {\n        this.users = res.result;\n        this.pagination = res.pagination;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n}\n","module.exports = \".card:hover img {\\n    -webkit-transform: scale(1.2, 1.2);\\n            transform: scale(1.2, 1.2);\\n    transition-duration: 500ms;\\n    transition-timing-function: ease-out;\\n    opacity: 0.7;\\n}\\n\\n.card img {\\n    -webkit-transform: scale(1.0, 1.0);\\n            transform: scale(1.0, 1.0);\\n    transition-duration: 500ms;\\n    transition-timing-function: ease-out;\\n}\\n\\n.card-img-wrapper {\\n    overflow: hidden;\\n    position: relative;\\n}\\n\\n.member-icons {\\n    position: absolute;\\n    bottom: -30%;\\n    left: 0;\\n    right: 0;\\n    margin-right: auto;\\n    margin-left: auto;\\n    opacity: 0;\\n}\\n\\n.card-img-wrapper:hover .member-icons {\\n    bottom: 0;\\n    opacity: 1;\\n}\\n\\n.animate {\\n    transition: all 0.3s ease-in-out;\\n}\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"\\n          [routerLink]=\\\"['/members/', user.id]\\\"><i class=\\\"fa fa-user\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"sendLike(user.id)\\\"><i class=\\\"fa fa-heart\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\" [queryParams]=\\\"{tab: 3}\\\" ><i class=\\\"fa fa-envelope\\\"></i></button></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\"><i class=\\\"fa fa-user\\\"></i>\\n      {{user.knownAs}}, {{user.age}}\\n    </h6>\\n    <p class=\\\"card-text text-muted text-center\\\">{{user.city}}</p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { AuthService } from '../../_services/auth.service';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n      this.alertify.success('You have liked: ' + this.user.knownAs);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","module.exports = \".img-thumbnail {\\n    margin: 25px;\\n    width: 85%;\\n    height: 85%;\\n}\\n\\n.card-body {\\n    padding: 0 25px;\\n}\\n\\n.card-footer {\\n    padding: 10px 15px;\\n    background-color: #fff;\\n    border-top: none;\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{user.knownAs}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user.city}}, {{user.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong>\\n            <p>{{user.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member Since:</strong>\\n            <p>{{user.created | date: 'mediumDate'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100\\\">Like</button>\\n            <button class=\\\"btn btn-success w-100\\\" (click)=\\\"selectTab(3)\\\">Message</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\" #memberTabs>\\n          <tab heading=\\\"About {{user.knownAs}}\\\">\\n            <h4>Description</h4>\\n            <p>{{user.introduction}}</p>\\n            <h4>Looking For</h4>\\n            <p>{{user.lookingFor}}</p>\\n          </tab>\\n          <tab heading=\\\"Interests\\\">\\n            <h4>Interests</h4>\\n            <p>{{user.interests}}</p>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <app-member-messages [recipientId]=\\\"user.id\\\"></app-member-messages>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('memberTabs') memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(private userService: UserService, private alertify: AlertifyService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n\n    this.route.queryParams.subscribe(params => {\n      const selectedTab = params['tab'];\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ];\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imageUrls = [];\n    for (let i = 0; i < this.user.photos.length; i++) {\n      imageUrls.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        description: this.user.photos[i].description\n      });\n    }\n    return imageUrls;\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n}\n","module.exports = \".img-thumbnail {\\n    margin: 25px;\\n    width: 85%;\\n    height: 85%;\\n}\\n\\n.card-body {\\n    padding: 0 25px;\\n}\\n\\n.card-footer {\\n    padding: 10px 15px;\\n    background-color: #fff;\\n    border-top: none;\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n          <h1>Your Profile</h1>\\n      </div>\\n      <div class=\\\"col-sm-8\\\">\\n        <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\n          <strong>Information:</strong> You have made changes.  Any unsaved changes will be lost!\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"card\\\">\\n          <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n          <div class=\\\"card-body\\\">\\n            <div>\\n              <strong>Location:</strong>\\n              <p>{{user.city}}, {{user.country}}</p>\\n            </div>\\n            <div>\\n              <strong>Age:</strong>\\n              <p>{{user.age}}</p>\\n            </div>\\n            <div>\\n              <strong>Last Active:</strong>\\n              <p>{{user.lastActive | timeAgo}}</p>\\n            </div>\\n            <div>\\n              <strong>Member Since:</strong>\\n              <p>{{user.created | date: 'mediumDate'}}</p>\\n            </div>\\n          </div>\\n          <div class=\\\"card-footer\\\">\\n              <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"tab-panel\\\">\\n          <tabset class=\\\"member-tabset\\\">\\n            <tab heading=\\\"Edit Profile\\\">\\n\\n              <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n                  <h4>Description</h4>\\n                  <textarea class=\\\"form-control\\\" name=\\\"introduction\\\" rows=\\\"6\\\" \\n                    [(ngModel)]=\\\"user.introduction\\\"></textarea>\\n                  <h4>Looking For</h4>\\n                  <textarea class=\\\"form-control\\\" name=\\\"lookingFor\\\" rows=\\\"6\\\" \\n                    [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\n                    <h4>Interests</h4>\\n                    <textarea class=\\\"form-control\\\" name=\\\"interests\\\" rows=\\\"6\\\" \\n                      [(ngModel)]=\\\"user.interests\\\"></textarea>\\n                    <h4>Location Details:</h4>\\n                  <div class=\\\"form-inline\\\">\\n                    <label for=\\\"city\\\">City</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\n                    <label for=\\\"country\\\">City</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\n                  </div>\\n                  \\n              </form>\\n\\n            </tab>\\n            <tab heading=\\\"Edit Photos\\\">\\n              <app-photo-editor [photos]=\\\"user.photos\\\" \\n                (getMemberPhotoChange)=\\\"updateMainPhoto($event)\\\"></app-photo-editor>\\n            </tab>\\n          </tabset>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from '../../_services/user.service';\nimport { AuthService } from '../../_services/auth.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  user: User;\n  photoUrl: string;\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(private route: ActivatedRoute, private alertify: AlertifyService,\n    private userService: UserService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(next => {\n      this.alertify.success('Profile updated successfully');\n      this.editForm.reset(this.user);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  updateMainPhoto(photoUrl) {\n    this.user.photoUrl = photoUrl;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n    <h2>Your matches - {{pagination.totalItems}} found</h2>\\n  </div>\\n\\n<div class=\\\"container mt-3\\\">\\n\\n    <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" novalidate>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"minAge\\\">Age From</label>\\n          <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"minAge\\\"\\n            [(ngModel)]=\\\"userParams.minAge\\\" name=\\\"minAge\\\">\\n        </div>\\n\\n        <div class=\\\"form-group px-2\\\">\\n          <label for=\\\"maxAge\\\">Age To</label>\\n          <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"maxAge\\\"\\n             [(ngModel)]=\\\"userParams.maxAge\\\" name=\\\"maxAge\\\">\\n        </div>\\n\\n        <div class=\\\"form-group px-2\\\">\\n          <label for=\\\"gender\\\">Show: </label>\\n          <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\"\\n            [(ngModel)]=\\\"userParams.gender\\\" name=\\\"gender\\\">\\n            <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n              {{gender.display}}\\n            </option>\\n          </select>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"resetFilters()\\\" style=\\\"margin-left:10px\\\">\\n            Reset Filter\\n        </button>\\n        <div class=\\\"col\\\">\\n          <div class=\\\"btn-group float-right\\\">\\n            <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\n              [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"lastActive\\\">Last Active</button>\\n            <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\n              [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"created\\\">Newest Members</button>\\n          </div>\\n        </div>\\n\\n      </form>\\n      <br>\\n\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination\\n      [boundaryLinks]=\\\"true\\\"\\n      [totalItems]=\\\"pagination.totalItems\\\"\\n      [(ngModel)]=\\\"pagination.currentPage\\\"\\n      [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n      (pageChanged)=\\\"pageChanged($event)\\\"\\n    previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n\\n  </pagination>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { ActivatedRoute } from '../../../../node_modules/@angular/router';\nimport { Pagination, PaginatedResult } from '../../_models/pagination';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n  userParams: any = {};\n  pagination: Pagination;\n\n  constructor(private userService: UserService, private alertify: AlertifyService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  resetFilters() {\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n      .subscribe((res: PaginatedResult<User[]>) => {\n        this.users = res.result;\n        this.pagination = res.pagination;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","module.exports = \".card {\\n  border: none;\\n}\\n\\n.chat {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.chat li {\\n  margin-bottom: 10px;\\n  padding-bottom: 10px;\\n  border-bottom: 1px dotted #B3A9A9;\\n}\\n\\n.rounded-circle {\\n  height: 50px;\\n  width: 50px;\\n}\\n\\n.card-body {\\n  overflow-y: scroll;\\n  height: 400px;\\n}\\n\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"messages?.length === 0\\\">\\n      No messages yet... say hi by using the message box below\\n    </div>\\n\\n    <ul class=\\\"chat\\\">\\n      <li *ngFor=\\\"let message of messages\\\">\\n        <!-- to them -->\\n        <div *ngIf=\\\"message.senderId == recipientId\\\">\\n          <span class=\\\"chat-img float-left\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <strong class=\\\"primary-font\\\">{{message.senderKnownAs}}</strong>\\n              <small class=\\\"text-muted float-right\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n              </small>\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n\\n        <!-- to me -->\\n        <div *ngIf=\\\"message.senderId != recipientId\\\">\\n            <span class=\\\"chat-img float-right\\\">\\n              <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n            </span>\\n            <div class=\\\"chat-body\\\">\\n              <div class=\\\"header\\\">\\n                  <small class=\\\"text-muted\\\">\\n                      <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n                      <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\">(unread)</span>\\n                      <span *ngIf=\\\"message.isRead\\\" class=\\\"text-success\\\">(Read {{message.dateRead | timeAgo}})</span>\\n                    </small>\\n                <strong class=\\\"primary-font float-right\\\">{{message.senderKnownAs}}</strong>\\n\\n              </div>\\n              <p>{{message.content}}</p>\\n            </div>\\n          </div>\\n      </li>\\n    </ul>\\n\\n  </div>\\n\\n  <div class=\\\"card-footer\\\">\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"messageForm.valid && sendMessage()\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\"\\n          [(ngModel)]=\\\"newMessage.content\\\"\\n          name=\\\"content\\\"\\n          required\\n          class=\\\"form-control input-sm\\\"\\n          placeholder=\\\"send a private message\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <button [disabled]=\\\"!messageForm.valid\\\" class=\\\"btn btn-primary\\\">Send</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n\\n\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../../_models/message';\nimport { UserService } from '../../_services/user.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n  constructor(private userService: UserService, private authService: AuthService,\n      private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService.getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n      .pipe(\n        tap(messages => {\n          for (let i = 0; i < messages.length; i++) {\n            if (messages[i].isRead === false && messages[i].recipientId === currentUserId) {\n              this.userService.markAsRead(currentUserId, messages[i].id);\n            }\n          }\n        })\n      )\n      .subscribe(messages => {\n        this.messages = messages;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId = this.recipientId;\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage)\n      .subscribe((message: Message) => {\n        this.messages.unshift(message);\n        this.newMessage.content = '';\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","module.exports = \"img.img-thumbnail {\\n    height: 100px;\\n    min-width: 100px !important;\\n    margin-bottom: 2px;\\n}\\n\\n.nv-file-over {\\n    border: dotted 3px red;\\n}\\n\\ninput[type=file] {\\n    color: transparent;\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{photo.url}}\\\" class=\\\"img-thumbnail p-1\\\" alt=\\\"\\\">\\n    <div class=\\\"text-center\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm mr-1\\\" \\n        [ngClass]=\\\"photo.isMain ? 'btn-success active' : 'btn-secondary'\\\"\\n        (click)=\\\"setMainPhoto(photo)\\\" \\n        [disabled]=\\\"photo.isMain\\\">Main</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" \\n        [disabled]=\\\"photo.isMain\\\"\\n        (click)=\\\"deletePhoto(photo.id)\\\"><i class=\\\"fa fa-trash-o\\\"></i></button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\">\\n \\n    <div class=\\\"col-md-3\\\">\\n\\n        <h3>Add Photos</h3>\\n\\n        <div ng2FileDrop\\n             [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n             (fileOver)=\\\"fileOverBase($event)\\\"\\n             [uploader]=\\\"uploader\\\"\\n             class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n             <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n            Drop Photos Here\\n        </div>\\n\\n        Multiple\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\n\\n        Single\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n    </div>\\n\\n    <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n\\n        <h3>Upload queue</h3>\\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n        <table class=\\\"table\\\">\\n            <thead>\\n            <tr>\\n                <th width=\\\"50%\\\">Name</th>\\n                <th>Size</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                <td><strong>{{ item?.file?.name }}</strong></td>\\n                <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n\\n        <div>\\n            <div>\\n                Queue progress:\\n                <div class=\\\"progress mb-4\\\">\\n                    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n                </div>\\n            </div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n                    (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n                <span class=\\\"fa fa-upload\\\"></span> Upload\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\n                    (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n                <span class=\\\"fa fa-ban\\\"></span> Cancel\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                    (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n                <span class=\\\"fa fa-trash\\\"></span> Remove\\n            </button>\\n        </div>\\n\\n    </div>\\n\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from '../../_models/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from '../../../environments/environment';\nimport { AuthService } from '../../_services/auth.service';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from '../../_services/alertify.service';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentMain: Photo;\n\n  constructor(private authService: AuthService, private userService: UserService,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain\n        };\n        this.photos.push(photo);\n        if (photo.isMain) {\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n        }\n      }\n    };\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n      this.currentMain.isMain = false;\n      photo.isMain = true;\n      this.authService.changeMemberPhoto(photo.url);\n      this.authService.currentUser.photoUrl = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  deletePhoto(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this photo?', () => {\n      this.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\n        this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\n        this.alertify.success('Photo has been deleted');\n      }, error => {\n        this.alertify.error('Failed to delete the photo');\n      });\n    });\n  }\n}\n","module.exports = \"table {\\n  margin-top: 15px;\\n}\\n\\n.img-circle {\\n  max-height: 50px;\\n}\\n\\ntd {\\n  vertical-align: middle;\\n}\\n\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"btn-group\\\">\\n        <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\n          <i class=\\\"fa fa-envelope\\\"></i> Unread\\n        </button>\\n        <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\n          <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n        </button>\\n        <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\n          <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n        </button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\n      <h3>No messages</h3>\\n    </div>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\n      <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n        <tr>\\n          <th style=\\\"width: 40%\\\">Message</th>\\n          <th style=\\\"width: 20%\\\">From / To</th>\\n          <th style=\\\"width: 20%\\\">Sent / Received</th>\\n          <th style=\\\"width: 20%\\\"></th>\\n        </tr>\\n        <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"['/members',\\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId]\\\"\\n            [queryParams]=\\\"{tab: 3}\\\">\\n          <td>{{message.content}}</td>\\n          <td>\\n            <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\n                  <img src={{message?.senderPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n                  <strong>{{message.senderKnownAs}}</strong>\\n            </div>\\n            <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\n                  <img src={{message?.recipientPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\n                  <strong>{{message.recipientKnownAs}}</strong>\\n            </div>\\n          </td>\\n          <td>{{message.messageSent | timeAgo}}</td>\\n          <td>\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\">Delete</button>\\n          </td>\\n        </tr>\\n      </table>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"d-flex justify-content-center\\\">\\n      <pagination [boundaryLinks]=\\\"true\\\"\\n                  [totalItems]=\\\"pagination.totalItems\\\"\\n                  [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n                  [(ngModel)]=\\\"pagination.currentPage\\\"\\n                  (pageChanged)=\\\"pageChanged($event)\\\"\\n                previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n    </pagination>\\n    </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { ActivatedRoute } from '../../../node_modules/@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(private userService: UserService, private authService: AuthService,\n    private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.decodedToken.nameid, this.pagination.currentPage,\n      this.pagination.itemsPerPage, this.messageContainer)\n      .subscribe((res: PaginatedResult<Message[]>) => {\n        this.messages = res.result;\n        this.pagination = res.pagination;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this message?', () => {\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(() => {\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        this.alertify.success('Message has been deleted');\n      }, error => {\n        this.alertify.error('Failed to delete the message');\n      });\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n\n}\n","module.exports = \".dropdown-toggle, .dropdown-item {\\n    cursor: pointer;\\n}\\n\\nimg {\\n    max-height: 50px;\\n    border: 2px solid white;\\n    display: inline;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Dating App</a>\\n\\n    <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\">Matches</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\">Lists</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\">Messages</a>\\n      </li>\\n    </ul>\\n\\n    <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n      <span class=\\\"mr-1\\\">\\n        <img src=\\\"{{photoUrl || '../../assets/user.png'}}\\\" alt=\\\"\\\">\\n      </span>\\n      <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\n        Welcome {{authService.decodedToken?.unique_name | titlecase}}\\n      </a>\\n\\n      <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\">\\n          <i class=\\\"fa fa-user\\\"></i> Edit Profile</a>\\n        <div class=\\\"dropdown-divider\\\"></div>\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">\\n          <i class=\\\"fa fa-sign-out\\\"></i> Logout</a>\\n      </div>\\n    </div>\\n\\n    <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\n      <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n    </form>\\n  </div>\\n\\n\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  photoUrl: string;\n\n  constructor(public authService: AuthService, private alertify: AlertifyService,\n      private router: Router) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(next => {\n      this.alertify.success('Logged in successfully');\n    }, error => {\n      this.alertify.error(error);\n    }, () => {\n      this.router.navigate(['/members']);\n    });\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n    this.alertify.message('logged out');\n    this.router.navigate(['/home']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\n      <label class=\\\"radio-inline\\\">\\n        <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\n      </label>\\n      <label class=\\\"radio-inline ml-3\\\">\\n        <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\n      </label>\\n    </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\" \\n      [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors \\n        && registerForm.get('username').touched}\\\"\\n      class=\\\"form-control\\\" \\n      formControlName=\\\"username\\\" \\n      placeholder=\\\"Username\\\">\\n    <div class=\\\"invalid-feedback\\\">Please choose a username</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n      <input [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\" class=\\\"form-control\\\"\\n        placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\">\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">Known as is required</div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <input [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\">\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">Date of Birth is required</div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <input [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">City is required</div>\\n        </div>\\n      \\n        <div class=\\\"form-group\\\">\\n          <input [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">Country is required</div>\\n        </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" \\n      [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors \\n        && registerForm.get('password').touched}\\\"\\n      class=\\\"form-control\\\" \\n      formControlName=\\\"password\\\" \\n      placeholder=\\\"Password\\\">\\n      <div class=\\\"invalid-feedback\\\" \\n        *ngIf=\\\"registerForm.get('password').hasError('required') \\n          && registerForm.get('password').touched\\\">\\n          Password is required\\n      </div>\\n      <div class=\\\"invalid-feedback\\\" \\n      *ngIf=\\\"registerForm.get('password').hasError('minlength') \\n        && registerForm.get('password').touched\\\">\\n        Password must be at least 4 characters\\n    </div>\\n    <div class=\\\"invalid-feedback\\\" \\n    *ngIf=\\\"registerForm.get('password').hasError('maxlength') \\n      && registerForm.get('password').touched\\\">\\n      Password cannot exceed 8 characters\\n  </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n      <input \\n        [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors \\n          && registerForm.get('confirmPassword').touched\\n          || registerForm.get('confirmPassword').touched\\n          && registerForm.hasError('mismatch')}\\\"\\n        type=\\\"password\\\" \\n        class=\\\"form-control\\\" \\n        formControlName=\\\"confirmPassword\\\" \\n        placeholder=\\\"Confirm Password\\\">\\n        <div class=\\\"invalid-feedback\\\" \\n        *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') \\n          && registerForm.get('confirmPassword').touched\\\">\\n          Confirm Password is required\\n      </div>\\n      <div class=\\\"invalid-feedback\\\" \\n      *ngIf=\\\"registerForm.hasError('mismatch') \\n        && registerForm.get('confirmPassword').touched\\\">\\n        Passwords must match\\n    </div>\\n    </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success\\\" [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n  \\n</form>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  user: User;\n  registerForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(private authService: AuthService, private router: Router,\n    private alertify: AlertifyService, private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.bsConfig = {\n      containerClass: 'theme-red'\n    };\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validator: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true};\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n      this.authService.register(this.user).subscribe(() => {\n        this.alertify.success('Registration successful');\n      }, error => {\n        this.alertify.error(error);\n      }, () => {\n        this.authService.login(this.user).subscribe(() => {\n          this.router.navigate(['/members']);\n        });\n      });\n    }\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n\n}\n","import {Routes} from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\n\nexport const appRoutes: Routes = [\n    {path: '', component: HomeComponent},\n    {\n        path: '',\n        runGuardsAndResolvers: 'always',\n        canActivate: [AuthGuard],\n        children: [\n            {path: 'members', component: MemberListComponent,\n                resolve: {users: MemberListResolver}},\n            {path: 'members/:id', component: MemberDetailComponent,\n                resolve: {user: MemberDetailResolver}},\n            {path: 'member/edit', component: MemberEditComponent,\n                resolve: {user: MemberEditResolver}, canDeactivate: [PreventUnsavedChanges]},\n            {path: 'messages', component: MessagesComponent, resolve: {messages: MessagesResolver}},\n            {path: 'lists', component: ListsComponent, resolve: {users: ListsResolver}},\n        ]\n    },\n    {path: '**', redirectTo: '', pathMatch: 'full'},\n];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}